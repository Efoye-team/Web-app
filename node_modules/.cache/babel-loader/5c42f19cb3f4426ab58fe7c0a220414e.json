{"ast":null,"code":"var _jsxFileName = \"/home/gedi/Desktop/IOT-BBMS_Soft/src/components/ReadSensorValue/Read.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { withFirebase } from '../../components/Firebase';\nimport { AuthUserContext } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Read = ({\n  id\n}) => {\n  _s();\n\n  const [value, setValue] = useState('OFF');\n  return /*#__PURE__*/_jsxDEV(ReadButton, {\n    value: value,\n    setValue: setValue,\n    id: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Read, \"OpzMG98WBlR3Z0PCV5HelNsje00=\");\n\n_c = Read;\n\nclass ReadBase extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const user = this.context;\n    console.log(this.props.firebase);\n    this.props.firebase.Status(this.props.id, user.deviceId).on('value', snapshot => {\n      console.log('RESULTTTTT');\n      const usersObject = snapshot.val();\n      console.log('USEROBJECT::', usersObject);\n      this.props.setValue(usersObject);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        children: this.props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nReadBase.contextType = AuthUserContext;\nconst ReadButton = withFirebase(ReadBase);\n_c2 = ReadButton;\nexport default Read;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Read\");\n$RefreshReg$(_c2, \"ReadButton\");","map":{"version":3,"sources":["/home/gedi/Desktop/IOT-BBMS_Soft/src/components/ReadSensorValue/Read.js"],"names":["React","Component","useState","Input","Label","withFirebase","AuthUserContext","Read","id","value","setValue","ReadBase","constructor","props","componentDidMount","user","context","console","log","firebase","Status","deviceId","on","snapshot","usersObject","val","render","contextType","ReadButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,eAAT,QAAgC,YAAhC;;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEO,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAA8C,IAAA,EAAE,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;GAAMD,I;;KAAAA,I;;AAKN,MAAMI,QAAN,SAAuBV,SAAvB,CAAiC;AAE/BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKC,OAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,QAAvB;AACA,SAAKN,KAAL,CAAWM,QAAX,CACGC,MADH,CACU,KAAKP,KAAL,CAAWL,EADrB,EACyBO,IAAI,CAACM,QAD9B,EAEGC,EAFH,CAEM,OAFN,EAEgBC,QAAD,IAAc;AACzBN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAMM,WAAW,GAAGD,QAAQ,CAACE,GAAT,EAApB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,WAA5B;AAEA,WAAKX,KAAL,CAAWH,QAAX,CAAoBc,WAApB;AACD,KARH;AASD;;AACDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,KAAD;AAAA,kBAAQ,KAAKb,KAAL,CAAWJ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AAzB8B;;AAA3BE,Q,CACGgB,W,GAAcrB,e;AA0BvB,MAAMsB,UAAU,GAAGvB,YAAY,CAACM,QAAD,CAA/B;MAAMiB,U;AACN,eAAerB,IAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { withFirebase } from '../../components/Firebase';\nimport { AuthUserContext } from '../Session';\nconst Read = ({ id }) => {\n  const [value, setValue] = useState('OFF');\n\n  return <ReadButton value={value} setValue={setValue} id={id} />;\n};\nclass ReadBase extends Component {\n  static contextType = AuthUserContext;\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const user = this.context;\n    console.log(this.props.firebase);\n    this.props.firebase\n      .Status(this.props.id, user.deviceId)\n      .on('value', (snapshot) => {\n        console.log('RESULTTTTT');\n        const usersObject = snapshot.val();\n        console.log('USEROBJECT::', usersObject);\n\n        this.props.setValue(usersObject);\n      });\n  }\n  render() {\n    return (\n      <>\n        <Label>{this.props.value}</Label>\n      </>\n    );\n  }\n}\nconst ReadButton = withFirebase(ReadBase);\nexport default Read;\n"]},"metadata":{},"sourceType":"module"}