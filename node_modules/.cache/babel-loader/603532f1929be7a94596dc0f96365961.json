{"ast":null,"code":"var _jsxFileName = \"/home/gedi/Desktop/IOT-BBMS_Soft/src/components/Account/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose'; // reactstrap components\n\nimport { Button, Card, Form, Input, Container, Row, Col } from 'reactstrap';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '..//Firebase';\nimport { PasswordForgetForm } from '../../views/examples/PasswordForget';\nimport PasswordChangeForm from '../../views/examples/PasswordChange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SIGN_IN_METHODS = [{\n  id: 'password',\n  provider: null\n}, {\n  id: 'google.com',\n  provider: 'googleProvider'\n}, {\n  id: 'facebook.com',\n  provider: 'facebookProvider'\n}, {\n  id: 'twitter.com',\n  provider: 'twitterProvider'\n}];\n\nfunction AccountPage() {\n  _s();\n\n  document.documentElement.classList.remove('nav-open');\n  React.useEffect(() => {\n    document.body.classList.add('register-page');\n    return function cleanup() {\n      document.body.classList.remove('register-page');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      style: {\n        backgroundImage: 'url(' + require('assets/img/laEthio.jpg').default + ')'\n      },\n      children: /*#__PURE__*/_jsxDEV(AuthUserContext.Consumer, {\n        children: authUser => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title mx-auto\",\n                children: [\"Account: \", authUser.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PasswordForgetForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"card-register \",\n                  children: /*#__PURE__*/_jsxDEV(PasswordChangeForm, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"card-register \",\n                  children: /*#__PURE__*/_jsxDEV(LoginManagement, {\n                    authUser: authUser\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AccountPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AccountPage;\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSignInMethods = () => {\n      this.props.firebase.auth.fetchSignInMethodsForEmail(this.props.authUser.email).then(activeSignInMethods => this.setState({\n        activeSignInMethods,\n        error: null\n      })).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onSocialLoginLink = provider => {\n      this.props.firebase.auth.currentUser.linkWithPopup(this.props.firebase[provider]).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onDefaultLoginLink = password => {\n      const credential = this.props.firebase.emailAuthProvider.credential(this.props.authUser.email, password);\n      this.props.firebase.auth.currentUser.linkAndRetrieveDataWithCredential(credential).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onUnlink = providerId => {\n      this.props.firebase.auth.currentUser.unlink(providerId).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  render() {\n    const {\n      activeSignInMethods,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title mx-auto\",\n        children: \"SignInMethods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none'\n          },\n          children: SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: signInMethod.id === 'password' ? /*#__PURE__*/_jsxDEV(DefaultLoginToggle, {\n                onlyOneLeft: onlyOneLeft,\n                isEnabled: isEnabled,\n                signInMethod: signInMethod,\n                onLink: this.onDefaultLoginLink,\n                onUnlink: this.onUnlink\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(SocialLoginToggle, {\n                onlyOneLeft: onlyOneLeft,\n                isEnabled: isEnabled,\n                signInMethod: signInMethod,\n                onLink: this.onSocialLoginLink,\n                onUnlink: this.onUnlink\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)\n            }, signInMethod.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), error && error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) => isEnabled ? /*#__PURE__*/_jsxDEV(Button, {\n  type: \"button\",\n  onClick: () => onUnlink(signInMethod.id),\n  disabled: onlyOneLeft,\n  children: [\"Deactivate \", signInMethod.id]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 194,\n  columnNumber: 5\n}, this) : /*#__PURE__*/_jsxDEV(Button, {\n  type: \"button\",\n  onClick: () => onLink(signInMethod.provider),\n  children: [\"Link \", signInMethod.id]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 202,\n  columnNumber: 5\n}, this);\n\n_c2 = SocialLoginToggle;\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onLink(this.state.passwordOne);\n      this.setState({\n        passwordOne: '',\n        passwordTwo: ''\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      passwordOne: '',\n      passwordTwo: ''\n    };\n  }\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink\n    } = this.props;\n    const {\n      passwordOne,\n      passwordTwo\n    } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n    return isEnabled ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: () => onUnlink(signInMethod.id),\n      disabled: onlyOneLeft,\n      children: [\"Deactivate \", signInMethod.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        children: [\"Link \", signInMethod.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n_c3 = LoginManagement;\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withEmailVerification, withAuthorization(condition))(AccountPage);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AccountPage\");\n$RefreshReg$(_c2, \"SocialLoginToggle\");\n$RefreshReg$(_c3, \"LoginManagement\");","map":{"version":3,"sources":["/home/gedi/Desktop/IOT-BBMS_Soft/src/components/Account/index.js"],"names":["React","Component","compose","Button","Card","Form","Input","Container","Row","Col","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","PasswordForgetForm","PasswordChangeForm","SIGN_IN_METHODS","id","provider","AccountPage","document","documentElement","classList","remove","useEffect","body","add","cleanup","backgroundImage","require","default","authUser","email","LoginManagementBase","constructor","props","fetchSignInMethods","firebase","auth","fetchSignInMethodsForEmail","then","activeSignInMethods","setState","error","catch","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","state","componentDidMount","render","listStyleType","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message","SocialLoginToggle","onLink","DefaultLoginToggle","onSubmit","event","preventDefault","passwordOne","passwordTwo","onChange","target","name","value","isInvalid","LoginManagement","condition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n} from 'reactstrap';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from '../Session';\nimport { withFirebase } from '..//Firebase';\nimport { PasswordForgetForm } from '../../views/examples/PasswordForget';\nimport PasswordChangeForm from '../../views/examples/PasswordChange';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nfunction AccountPage() {\n  document.documentElement.classList.remove('nav-open');\n  React.useEffect(() => {\n    document.body.classList.add('register-page');\n    return function cleanup() {\n      document.body.classList.remove('register-page');\n    };\n  });\n  return (\n    <>\n      <div\n        className=\"page-header\"\n        style={{\n          backgroundImage:\n            'url(' + require('assets/img/laEthio.jpg').default + ')',\n        }}\n      >\n        <AuthUserContext.Consumer>\n          {(authUser) => (\n            <>\n              <Container>\n                <Row>\n                  <h1 className=\"title mx-auto\">\n                    Account: {authUser.email}\n                  </h1>\n                </Row>\n\n                <PasswordForgetForm />\n                <Row>\n                  <Col className=\"\">\n                    <Card className=\"card-register \">\n                      <PasswordChangeForm />\n                    </Card>\n                  </Col>\n                  <Col className=\"\">\n                    <Card className=\"card-register \">\n                      <LoginManagement authUser={authUser} />\n                    </Card>\n                  </Col>\n                </Row>\n              </Container>{' '}\n            </>\n          )}\n        </AuthUserContext.Consumer>\n      </div>\n    </>\n  );\n}\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then((activeSignInMethods) =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch((error) => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const credential =\n      this.props.firebase.emailAuthProvider.credential(\n        this.props.authUser.email,\n        password,\n      );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <>\n        {' '}\n        <h3 className=\"title mx-auto\">SignInMethods</h3>\n        <div>\n          <ul style={{ listStyleType: 'none' }}>\n            {SIGN_IN_METHODS.map((signInMethod) => {\n              const onlyOneLeft = activeSignInMethods.length === 1;\n              const isEnabled = activeSignInMethods.includes(\n                signInMethod.id,\n              );\n\n              return (\n                <li key={signInMethod.id}>\n                  {signInMethod.id === 'password' ? (\n                    <DefaultLoginToggle\n                      onlyOneLeft={onlyOneLeft}\n                      isEnabled={isEnabled}\n                      signInMethod={signInMethod}\n                      onLink={this.onDefaultLoginLink}\n                      onUnlink={this.onUnlink}\n                    />\n                  ) : (\n                    <SocialLoginToggle\n                      onlyOneLeft={onlyOneLeft}\n                      isEnabled={isEnabled}\n                      signInMethod={signInMethod}\n                      onLink={this.onSocialLoginLink}\n                      onUnlink={this.onUnlink}\n                    />\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n          {error && error.message}\n        </div>\n      </>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <Button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </Button>\n  ) : (\n    <Button\n      type=\"button\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </Button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } =\n      this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <Button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </Button>\n    ) : (\n      <Form onSubmit={this.onSubmit}>\n        <Input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <Button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n"]},"metadata":{},"sourceType":"module"}