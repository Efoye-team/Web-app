{"ast":null,"code":"var _jsxFileName = \"/home/gedi/Desktop/IOT-BBMS_Soft/src/components/Switch/Switch.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { withFirebase } from '../../components/Firebase';\nimport { AuthUserContext } from '../Session';\nimport './Switch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Switch = ({\n  id\n}) => {\n  _s();\n\n  const [value, setValue] = useState('OFF');\n  return /*#__PURE__*/_jsxDEV(SwitchButton, {\n    value: value,\n    setValue: setValue,\n    id: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Switch, \"OpzMG98WBlR3Z0PCV5HelNsje00=\");\n\n_c = Switch;\n\nclass SwitchBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      const user = this.context; //toggle the value for the UI\n\n      this.props.setValue(this.props.value === 'OFF' ? 'ON' : 'OFF'); //ADD THE VALUE TO THE FIREBASE REALTIME DATABASE\n\n      const finalValue = this.props.value === 'OFF' ? 'ON' : 'OFF';\n      this.props.firebase.Controller(this.props.id, user.deviceId).set(finalValue);\n    };\n  }\n\n  componentDidMount() {\n    const user = this.context;\n    this.props.firebase.Controller(this.props.id, user.deviceId).on('value', snapshot => {\n      const usersObject = snapshot.val();\n      console.log(usersObject);\n      this.props.setValue(usersObject);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        checked: this.props.value === 'ON',\n        onChange: this.onChange,\n        className: \"react-switch-checkbox\",\n        id: this.props.id,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          background: this.props.value == 'ON' && '#06D6A0'\n        },\n        className: \"react-switch-label\",\n        htmlFor: this.props.id,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `react-switch-button`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nSwitchBase.contextType = AuthUserContext;\nconst SwitchButton = withFirebase(SwitchBase);\n_c2 = SwitchButton;\nexport default Switch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Switch\");\n$RefreshReg$(_c2, \"SwitchButton\");","map":{"version":3,"sources":["/home/gedi/Desktop/IOT-BBMS_Soft/src/components/Switch/Switch.js"],"names":["React","Component","useState","Input","Label","withFirebase","AuthUserContext","Switch","id","value","setValue","SwitchBase","constructor","props","onChange","event","user","context","finalValue","firebase","Controller","deviceId","set","componentDidMount","on","snapshot","usersObject","val","console","log","render","background","contextType","SwitchButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAO,cAAP;;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AAEA,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEO,KAArB;AAA4B,IAAA,QAAQ,EAAEC,QAAtC;AAAgD,IAAA,EAAE,EAAEF;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;GAAMD,M;;KAAAA,M;;AAKN,MAAMI,UAAN,SAAyBV,SAAzB,CAAmC;AAGjCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,QAhBmB,GAgBPC,KAAD,IAAW;AACpB,YAAMC,IAAI,GAAG,KAAKC,OAAlB,CADoB,CAGpB;;AACA,WAAKJ,KAAL,CAAWH,QAAX,CAAoB,KAAKG,KAAL,CAAWJ,KAAX,KAAqB,KAArB,GAA6B,IAA7B,GAAoC,KAAxD,EAJoB,CAMpB;;AACA,YAAMS,UAAU,GAAG,KAAKL,KAAL,CAAWJ,KAAX,KAAqB,KAArB,GAA6B,IAA7B,GAAoC,KAAvD;AACA,WAAKI,KAAL,CAAWM,QAAX,CACGC,UADH,CACc,KAAKP,KAAL,CAAWL,EADzB,EAC6BQ,IAAI,CAACK,QADlC,EAEGC,GAFH,CAEOJ,UAFP;AAGD,KA3BkB;AAElB;;AACDK,EAAAA,iBAAiB,GAAG;AAClB,UAAMP,IAAI,GAAG,KAAKC,OAAlB;AAEA,SAAKJ,KAAL,CAAWM,QAAX,CACGC,UADH,CACc,KAAKP,KAAL,CAAWL,EADzB,EAC6BQ,IAAI,CAACK,QADlC,EAEGG,EAFH,CAEM,OAFN,EAEgBC,QAAD,IAAc;AACzB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAT,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,WAAKb,KAAL,CAAWH,QAAX,CAAoBgB,WAApB;AACD,KAPH;AAQD;;AAeDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWJ,KAAX,KAAqB,IADhC;AAEE,QAAA,QAAQ,EAAE,KAAKK,QAFjB;AAGE,QAAA,SAAS,EAAC,uBAHZ;AAIE,QAAA,EAAE,EAAE,KAAKD,KAAL,CAAWL,EAJjB;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE;AACLuB,UAAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWJ,KAAX,IAAoB,IAApB,IAA4B;AADnC,SADT;AAIE,QAAA,SAAS,EAAC,oBAJZ;AAKE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWL,EALtB;AAAA,+BAOE;AAAM,UAAA,SAAS,EAAG;AAAlB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADF;AAoBD;;AArDgC;;AAA7BG,U,CACGqB,W,GAAc1B,e;AAsDvB,MAAM2B,YAAY,GAAG5B,YAAY,CAACM,UAAD,CAAjC;MAAMsB,Y;AACN,eAAe1B,MAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { withFirebase } from '../../components/Firebase';\nimport { AuthUserContext } from '../Session';\nimport './Switch.css';\nconst Switch = ({ id }) => {\n  const [value, setValue] = useState('OFF');\n\n  return <SwitchButton value={value} setValue={setValue} id={id} />;\n};\nclass SwitchBase extends Component {\n  static contextType = AuthUserContext;\n\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    const user = this.context;\n\n    this.props.firebase\n      .Controller(this.props.id, user.deviceId)\n      .on('value', (snapshot) => {\n        const usersObject = snapshot.val();\n        console.log(usersObject);\n\n        this.props.setValue(usersObject);\n      });\n  }\n\n  onChange = (event) => {\n    const user = this.context;\n\n    //toggle the value for the UI\n    this.props.setValue(this.props.value === 'OFF' ? 'ON' : 'OFF');\n\n    //ADD THE VALUE TO THE FIREBASE REALTIME DATABASE\n    const finalValue = this.props.value === 'OFF' ? 'ON' : 'OFF';\n    this.props.firebase\n      .Controller(this.props.id, user.deviceId)\n      .set(finalValue);\n  };\n\n  render() {\n    return (\n      <>\n        <Input\n          checked={this.props.value === 'ON'}\n          onChange={this.onChange}\n          className=\"react-switch-checkbox\"\n          id={this.props.id}\n          type=\"checkbox\"\n        />\n        <Label\n          style={{\n            background: this.props.value == 'ON' && '#06D6A0',\n          }}\n          className=\"react-switch-label\"\n          htmlFor={this.props.id}\n        >\n          <span className={`react-switch-button`} />\n        </Label>\n      </>\n    );\n  }\n}\nconst SwitchButton = withFirebase(SwitchBase);\nexport default Switch;\n"]},"metadata":{},"sourceType":"module"}