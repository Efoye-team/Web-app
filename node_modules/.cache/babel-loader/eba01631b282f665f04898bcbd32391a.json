{"ast":null,"code":"var _jsxFileName = \"/home/gedi/Desktop/IOT-BBMS_Soft/src/views/examples/PasswordForget.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // reactstrap components\n\nimport { Button, Card, Form, Input, Container, Row, Col } from 'reactstrap';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PasswordForgetPage() {\n  _s();\n\n  //   <div>\n  //     <h1>PasswordForget</h1>\n  //     <PasswordForgetForm />\n  //   </div>;\n  document.documentElement.classList.remove('nav-open');\n  React.useEffect(() => {\n    document.body.classList.add('register-page');\n    return function cleanup() {\n      document.body.classList.remove('register-page');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      style: {\n        backgroundImage: 'url(' + require('assets/img/login-image.jpg').default + ')'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"ml-auto mr-auto\",\n            lg: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"card-register ml-auto mr-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"title mx-auto\",\n                children: \"Reset your password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PasswordForgetForm, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PasswordForgetPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PasswordForgetPage;\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email\n      } = this.state;\n      this.props.firebase.doPasswordReset(email).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      error\n    } = this.state;\n    const isInvalid = email === '';\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        block: true,\n        color: \"danger\",\n        children: \"Reset My Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst PasswordForgetLink = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: /*#__PURE__*/_jsxDEV(Link, {\n    to: ROUTES.PASSWORD_FORGET,\n    children: \"Forgot Password?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 125,\n  columnNumber: 3\n}, this);\n\n_c2 = PasswordForgetLink;\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n_c3 = PasswordForgetForm;\nexport { PasswordForgetForm, PasswordForgetLink };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PasswordForgetPage\");\n$RefreshReg$(_c2, \"PasswordForgetLink\");\n$RefreshReg$(_c3, \"PasswordForgetForm\");","map":{"version":3,"sources":["/home/gedi/Desktop/IOT-BBMS_Soft/src/views/examples/PasswordForget.js"],"names":["React","Component","Link","Button","Card","Form","Input","Container","Row","Col","withFirebase","ROUTES","PasswordForgetPage","document","documentElement","classList","remove","useEffect","body","add","cleanup","backgroundImage","require","default","INITIAL_STATE","email","error","PasswordForgetFormBase","constructor","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","PasswordForgetLink","PASSWORD_FORGET","PasswordForgetForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n} from 'reactstrap';\n\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nfunction PasswordForgetPage() {\n  //   <div>\n  //     <h1>PasswordForget</h1>\n  //     <PasswordForgetForm />\n  //   </div>;\n\n  document.documentElement.classList.remove('nav-open');\n  React.useEffect(() => {\n    document.body.classList.add('register-page');\n    return function cleanup() {\n      document.body.classList.remove('register-page');\n    };\n  });\n  return (\n    <>\n      <div\n        className=\"page-header\"\n        style={{\n          backgroundImage:\n            'url(' +\n            require('assets/img/login-image.jpg').default +\n            ')',\n        }}\n      >\n        <div className=\"filter\" />\n\n        <Container>\n          <Row>\n            <Col className=\"ml-auto mr-auto\" lg=\"4\">\n              <Card className=\"card-register ml-auto mr-auto\">\n                <h3 className=\"title mx-auto\">\n                  Reset your password:\n                </h3>\n\n                <PasswordForgetForm />\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <Form onSubmit={this.onSubmit} className=\"register-form\">\n        <label>Email</label>\n\n        <Input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          block\n          color=\"danger\"\n        >\n          Reset My Password\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n"]},"metadata":{},"sourceType":"module"}